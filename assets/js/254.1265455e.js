(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{636:function(s,a,t){"use strict";t.r(a);var e=t(5),v=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"问题发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题发现"}},[s._v("#")]),s._v(" 问题发现")]),s._v(" "),a("p",[s._v("在做一个报表系统的时候需要查询主管下管理的总人数，我们使用的是 Oracle 数据库，员工表中每个人的信息中维护有各自对应的主管工号，这样我们就可以使用 "),a("code",[s._v("CONNECT BY PRIOR")]),s._v(" 语句很容易查询出主管对应的所有人。")]),s._v(" "),a("p",[a("code",[s._v("CONNECT BY PRIOR")]),s._v(" 是 Oracle 数据库中用于处理层次结构数据的一种查询语法。这语句的主要作用是在表达式中使用先前行的值与当前行的值进行比较，从而建立层次结构关系。")]),s._v(" "),a("p",[s._v("但在使用过程中也发现了一些问题，在此记录一下。")]),s._v(" "),a("p",[s._v("先看一下最开始的 SQL：")]),s._v(" "),a("div",{staticClass:"language-SQL line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" EMPLOYEEID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("TRUENAME "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("  EMPLOYEE_INFO\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONNECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" PRIOR EMPLOYEEID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ZHUGUANCODE\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" EMPLOYEEID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C00000001'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("解释一下 SQL：")]),s._v(" "),a("div",{staticClass:"custom-block note"},[a("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),a("p",[a("code",[s._v("EMPLOYEEID,TRUENAME")]),s._v("：要查询的列。")]),s._v(" "),a("p",[a("code",[s._v("EMPLOYEE_INFO")]),s._v("：要查询的表。")]),s._v(" "),a("p",[a("code",[s._v("PRIOR EMPLOYEEID = ZHUGUANCODE")]),s._v("：定义父子关系的条件。"),a("code",[s._v("EMPLOYEEID")]),s._v(" 是父节点的列，"),a("code",[s._v("ZHUGUANCODE")]),s._v(" 是子节点的列。")]),s._v(" "),a("p",[a("code",[s._v("START WITH EMPLOYEEID = 'C00000001'")]),s._v("：定义查询的起始条件，即根节点的条件。")])]),s._v(" "),a("p",[s._v("这个查询的目的是从主管工号为'C00000001'的员工开始，递归地查询其直接和间接下属的员工信息。")]),s._v(" "),a("p",[s._v("到这里一切看起来还很正常，直到用大老板的工号测试的时候，发现这个语句竟然报错了，通过排查发现数据库中大老板的主管是他自己，这时使用 "),a("code",[s._v("CONNECT BY PRIOR")]),s._v(" 进行递归查询时，由于可以通过 "),a("code",[s._v("ZHUGUANCODE")]),s._v(" 回到自己身上，Oracle 会尝试无限制地进行递归，导致查询陷入无限循环，最终触发数据库错误。这种情况下，Oracle无法确定何时停止查询，因此报错。")]),s._v(" "),a("h2",{attrs:{id:"解决问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决问题"}},[s._v("#")]),s._v(" 解决问题")]),s._v(" "),a("p",[s._v("由于是因为查询进入了无限循环而导致报错，那有没有一个方法让它在遇到访问过的节点时退出循环呢？")]),s._v(" "),a("p",[s._v("这里可以使用 "),a("code",[s._v("NOCYCLE")]),s._v(" 关键字来查询：")]),s._v(" "),a("div",{staticClass:"language-SQL line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" EMPLOYEEID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("TRUENAME "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v("  EMPLOYEE_INFO\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONNECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" NOCYCLE PRIOR EMPLOYEEID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ZHUGUANCODE\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("START")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WITH")]),s._v(" EMPLOYEEID "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C00000001'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("code",[s._v("NOCYCLE")]),s._v(" 关键字告诉 Oracle 在进行递归查询时，如果遇到已经访问过的节点（形成了循环引用），则停止继续递归，从而防止陷入无限循环。这样，即使存在自己是自己的主管的情况，也能够正常执行查询，而不再报错。")]),s._v(" "),a("p",[s._v("在没有使用 "),a("code",[s._v("NOCYCLE")]),s._v(" 时，Oracle 默认会认为查询的层次结构是无限的，因此可能会导致循环引用的错误。使用 "),a("code",[s._v("CONNECT BY NOCYCLE PRIOR")]),s._v(" 是一种防范措施，确保在遇到循环引用时能够优雅地处理，而不是陷入错误。")]),s._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[s._v("#")]),s._v(" 结语")]),s._v(" "),a("p",[s._v("总的来说，"),a("code",[s._v("CONNECT BY NOCYCLE PRIOR")]),s._v(" 是一种用于处理具有层次结构的数据中可能存在的循环引用问题的有效方式，确保查询可以正常执行而不会陷入无限循环。")])])}),[],!1,null,null,null);a.default=v.exports}}]);